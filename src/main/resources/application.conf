akka {
  actor {
    provider = akka.cluster.ClusterActorRefProvider
  }

  remote = {
    enabled-transports = ["akka.remote.netty.tcp"]
  }

  cluster {
    use-dispatcher = "akka.cluster-dispatcher"

    failure-detector {
      implementation-class = "akka.remote.PhiAccrualFailureDetector"
      threshold = 10.0
      heartbeat-interval = 1 s
      min-std-deviation = 100 ms
      acceptable-heartbeat-pause = 3 s
    }
    auto-down-unreachable-after = 10 seconds
  }

  metrics-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 2
    }
  }

  cluster-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 2
    }
  }


  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = INFO
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 0
  log-dead-letters-during-shutdown = false
}

akka.cluster.metrics.enabled=off
akka.extensions = [ "akka.cluster.metrics.ClusterMetricsExtension" ]