akka {

  # Akka logging configuration. ***Do not touch. To configure logging, see logback.xml.***

  # If you set the loglevel to a higher level than "DEBUG", any DEBUG events will be filtered out already
  # at the source and will never reach the logging backend, regardless of how logging is configured there.
  loglevel = DEBUG
  # Optimization: If an event would not be logged by slf4j, it will not be sent to the logging event bus.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  # Only use the slf4j logging, do not log directly to console.
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  stdout-loglevel = OFF
  logger-startup-timeout = 60s

  log-dead-letters = 100
  log-dead-letters-during-shutdown = false

  actor {
    #provider = akka.cluster.ClusterActorRefProvider
    provider = cluster
  }

  remote = {
    #enabled-transports = ["akka.remote.netty.tcp"]

    artery {
      enabled = on
      transport = tcp
    }
  }

  cluster {
    use-dispatcher = "akka.cluster-dispatcher"

    failure-detector {
      implementation-class = "akka.remote.PhiAccrualFailureDetector"
      threshold = 10.0
      heartbeat-interval = 1 s
      min-std-deviation = 100 ms
      acceptable-heartbeat-pause = 3 s
    }
    auto-down-unreachable-after = 10 seconds
  }

  metrics-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 2
    }
  }

  cluster-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 2
    }
  }
}

akka.cluster.metrics.enabled = off
akka.extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]